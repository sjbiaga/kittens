1741032786385:import cats.Monoid\nimport cats.instances.int._
1741032817855:object Ops:\n  implicit class SemigroupOps[A: Monoid] private[Ops] (lhs: A):\n    def <+>(rhs: A) = implicitly[Monoid[A]].combine(lhs, rhs)
1741032937566:import Ops._
1741033129838:implicit class ListMonoid[A: Monoid] extends Monoid[List[A]]:\n  def empty: List[A] = Nil\n  def combine(a: List[A], b: List[A]): List[A] =\n    (a zip b).map(_ <+> _)
1741033016382:object ListMonoid:\n  implicit val listOfIntMonoid: Monoid[List[Int]] = new ListMonoid[Int]
1741032991982:class OptionMonoid[A: Monoid] extends Monoid[Option[A]]:\n  def empty: Option[A] = None\n  def combine(a: Option[A], b: Option[A]): Option[A] =\n    (a zip b).map(_ <+> _)
1741033039310:object OptionMonoid:\n  implicit def optionMonoid[A: Monoid]: Monoid[Option[A]] = new OptionMonoid[A]
1741033054101:import ListMonoid._\nimport OptionMonoid._
1741033103909:List(Option(List(1)), Option(List(2,0)), Option(List(3))) <+> List(None, Option(List(0,2)))
