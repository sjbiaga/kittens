1740821317219:import cats.syntax.semigroup._
1740821318443:1 |+| 2
1740821330043:Some(1) |+| Some(2)
1740821372475:import cats.Monoid
1740821373587:implicitly[Monoid[Int]]
1741877726141:implicitly[Monoid[Option[Int]]]
1741877733168:Option(1) |+| Some(2)
1740821780970:import cats.syntax.invariant._
1699368354165:implicit def kittensMonoidForOption[A](implicit M: Monoid[A]): Monoid[Option[A]] = M.imap(Option.apply)(_.get)
1740821659036:Option(1) |+| Option(2)
1699368372132:Option(1) |+| None
1699368441668:implicit def kittensMonoidForOption[A](implicit M: Monoid[A]): Monoid[Option[A]] = M.imap(Option.apply) { it => if it eq None then M.empty else it.get }
1699368444932:Option(1) |+| None
1699368543595:import cats.Eq
1741887788028:implicit def kittensMonoidForOption[A](implicit M: Monoid[A], E: Eq[A]): Monoid[Option[A]] =\n  M.imap { (it: A) => if E.eqv(it, M.empty) then Option.empty[A] else Option.apply[A](it) } (_.getOrElse(M.empty))
1699368723033:Option(0) |+| None
1699368732089:None + Option(0)
1699368735649:None |+| Option(0)
1699368748895:Option.empty |+| Option(0)
1699368754296:Option.empty[Int] |+| Option(0)
1699368897055:Option.empty[String] |+| Option("")
1699368924575:Option.empty[String] |+| Option(0)
